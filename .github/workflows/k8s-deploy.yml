name: CI/CD - Build Docker & Deploy K8s

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-and-deploy:
    # ใช้ self-hosted runner ของคุณ
    runs-on: self-hosted

    steps:
      # 1. เช็คเอาโค้ด
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. ตั้งค่า Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Login Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4. Build & Push Backend
      - name: Build & Push Backend
        uses: docker/build-push-action@v4
        with:
          context: ./prodev
          file: ./prodev/Dockerfile
          push: true
          tags: armmer/prodev-backend:latest

      # 5. Build & Push Frontend
      - name: Build & Push Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./prodev-frontend/front-end
          file: ./prodev-frontend/front-end/Dockerfile
          push: true
          tags: armmer/prodev-frontend:latest

      # 6. Deploy ไป K8s (ใช้ kubectl บนเครื่อง)
      - name: Deploy to Kubernetes
        shell: powershell
        run: |
          # เช็คว่า kubectl ใช้งานได้
          kubectl version --client
          # ใช้ k8s-deployment.yml deploy
          kubectl apply -f k8s-deployment.yml
