name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: self-hosted  # ใช้ self-hosted runner บน Windows

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build Docker images
      - name: Build Docker images for backend and frontend
        run: |
          $env:BACKEND_IMAGE = 'armmer/prodev-backend'
          $env:FRONTEND_IMAGE = 'armmer/prodev-frontend'
          docker build -t $env:BACKEND_IMAGE ./prodev
          docker build -t $env:FRONTEND_IMAGE ./prodev-frontend/front-end

      # Run Docker Compose
      - name: Start Docker containers
        run: |
          docker-compose -f ./docker-compose.yml up -d
          docker ps

      # Run E2E Tests
      - name: Install Cypress dependencies
        shell: bash
        run: |
          cd e2e
          npm ci
          npx cypress run --headless --browser electron --config baseUrl=http://localhost:3000

      # Push images to Docker Hub
      - name: Push Docker images to Docker Hub
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin
          docker push $env:BACKEND_IMAGE
          docker push $env:FRONTEND_IMAGE
          docker logout

  cleanup:
    name: Cleanup Containers
    runs-on: self-hosted

    steps:
      - name: Clean up Docker containers
        run: |
          docker-compose -f ./docker-compose.yml down
