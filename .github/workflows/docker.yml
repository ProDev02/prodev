name: CI/CD - Build, Test & Push Docker

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    services:
      # MySQL service for testing
      prodev_db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ict555!!!
          MYSQL_DATABASE: prodev_db
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Backend Image
        uses: docker/build-push-action@v4
        with:
          context: ./prodev
          file: ./prodev/Dockerfile
          push: false
          tags: armmer/prodev-backend:latest

      - name: Build Frontend Image
        uses: docker/build-push-action@v4
        with:
          context: ./prodev-frontend/front-end
          file: ./prodev-frontend/front-end/Dockerfile
          push: false
          tags: armmer/prodev-frontend:latest

      - name: Start Containers
        run: |
          docker-compose -f docker-compose.yml up -d
          docker ps

      - name: Run E2E Tests
        working-directory: ./e2e
        run: |
          npm ci
          npx cypress run --headless --browser electron --config baseUrl=http://localhost:3000

      - name: Push Docker Images
        run: |
          docker tag armmer/prodev-backend:latest armmer/prodev-backend:latest
          docker tag armmer/prodev-frontend:latest armmer/prodev-frontend:latest
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push armmer/prodev-backend:latest
          docker push armmer/prodev-frontend:latest
          docker logout

      - name: Clean up containers
        if: always()
        run: docker-compose -f docker-compose.yml down
