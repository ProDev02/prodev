name: CI/CD - Build, Push & E2E Test

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout source code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Docker Buildx (multi-arch build)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4. Build & Push Backend Docker image
      - name: Build & Push Backend
        uses: docker/build-push-action@v4
        with:
          context: ./prodev
          file: ./prodev/Dockerfile
          push: true
          tags: |
            armmer/prodev-backend:latest
            armmer/prodev-backend:${{ github.sha }}

      # 5. Build & Push Frontend Docker image
      - name: Build & Push Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./prodev-frontend/front-end
          file: ./prodev-frontend/front-end/Dockerfile
          push: true
          tags: |
            armmer/prodev-frontend:latest
            armmer/prodev-frontend:${{ github.sha }}

      # 6. Start frontend container (mocked, backend ไม่จำเป็น)
      - name: Start frontend container
        run: |
          docker compose -f docker-compose.yml up -d frontend
          sleep 5 # รอ frontend server พร้อม

      # 7. Install Cypress dependencies
      - name: Install Cypress Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk2.0-0 \
            libgtk-3-0 \
            libnotify-dev \
            libgconf-2-4 \
            libnss3 \
            libxss1 \
            libasound2 \
            libxtst6 \
            xvfb

      # 8. Install dependencies & run Cypress E2E tests
      - name: Install & Run Cypress Tests
        run: |
          cd e2e
          npm ci
          npx cypress run --headless --browser electron

      # 9. Stop containers (always)
      - name: Stop containers
        if: always()
        run: docker compose -f docker-compose.yml down
