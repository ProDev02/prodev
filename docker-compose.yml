version: '3.8'

services:
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    user: root
    ports:
      - "8081:8080"  # Jenkins UI
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock  # ให้ Jenkins ใช้ Docker host
      - .:/workspace  # mount project
    networks:
      - prodev_network  # อยู่ network เดียวกับ backend/db/frontend

  prodev_db:
    image: mysql:8.0
    container_name: prodev_db
    environment:
      MYSQL_ROOT_PASSWORD: ict555!!!
      MYSQL_DATABASE: prodev_db
    ports:
      - "3307:3306"
    volumes:
      - prodev_db_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - prodev_network  # เพิ่ม network

  backend:
    build:
      context: ./prodev
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      # ใช้ host.docker.internal เพื่อให้ backend container connect MySQL ของ host machine
      SPRING_DATASOURCE_URL: jdbc:mysql://prodev_db:3306/prodev_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ict555!!!
      JWT_EXPIRATION: 86400000
      UPLOAD_DIR: uploads/products
    volumes:
      - ./prodev/uploads/products:/uploads/products
      - ./prodev/uploads/products:/app/uploads/products
    depends_on:
      - prodev_db
    networks:
      - prodev_network  # เพิ่ม network

  frontend:
    build:
      context: ./prodev-frontend/front-end
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    depends_on:
      - backend
    networks:
      - prodev_network  # เพิ่ม network

volumes:
  prodev_db_data:
  jenkins_home:

networks:
  prodev_network:  # สร้าง network
    driver: bridge
